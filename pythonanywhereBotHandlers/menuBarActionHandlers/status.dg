
response = Map();
if(sub_action.containsIgnoreCase("CPU"))
{
	query_map = Map();
	query_map.put("criteria","cliquser==" + user.get("id"));
	db = zoho.cliq.getRecords("userkey",query_map);
	if(db.get("status") == "SUCCESS" && db.get("list").size() != 0)
	{
		list = db.get("list");
		for each  i in list
		{
			username = i.get("username");
			privatekey = i.get("privatekey");
			apikey = i.get("apikey");
			apikey = zoho.encryption.aesDecode(privatekey,apikey);
			dc = i.get("dc");
		}
		host = "www.pythonanywhere.com";
		if(dc == "eu")
		{
			host = "eu.pythonanywhere.com";
		}
		api_url = "https://" + host + "/api/v0/user/" + username + "/cpu/";
		headers = Map();
		headers.put("Authorization","Token " + apikey);
		headers.put("Content-Type","application/json");
		responseapi = getUrl(api_url,headers);
		info responseapi;
		r = responseapi.toList();
		if(r.size() != 0)
		{
			for each  i in r
			{
				//table_data = {"text":username,"slides":{{"type":"table","title":"CPU info","data":{"headers":{"Parameter","Value"},"rows":{{"Parameter":"Daily cpu limit seconds","Value":i.get("daily_cpu_limit_seconds")},{"Parameter":"Next reset time","Value":i.get("next_reset_time")},{"Parameter":"Daily cpu total usage seconds","Value":i.get("daily_cpu_total_usage_seconds")}}}}}};
				//zoho.cliq.postToChat(chat.get("id"),table_data);
				response = Map();
				response.put("text",username);
				bot = Map();
				bot.put("name","pythonanywhere bot");
				bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
				response.put("bot",bot);
				slidesList = list();
				slidesList0 = Map();
				slidesList0.put("type","label");
				slidesList0.put("title","CPU Info");
				dataList = list();
				dataList0 = Map();
				dataList0.put("Daily cpu limit seconds",i.get("daily_cpu_limit_seconds"));
				dataList.add(dataList0);
				dataList1 = Map();
				dataList1.put("Next reset time",i.get("next_reset_time"));
				dataList.add(dataList1);
				dataList2 = Map();
				dataList2.put("Daily cpu total usage seconds",i.get("daily_cpu_total_usage_seconds"));
				dataList.add(dataList2);
				slidesList0.put("data",dataList);
				slidesList.add(slidesList0);
				response.put("slides",slidesList);
				return response;
			}
		}
		else
		{
			response = Map();
			bot = Map();
			bot.put("name","pythonanywhere bot");
			bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
			response.put("bot",bot);
			card = Map();
			card.put("theme","poll");
			response.put("card",card);
			response.put("text","Unable to fetch info from pythonanywhere");
			return response;
			//info "Unable to fetch info from PythonAnywhere.";
		}
	}
	else
	{
		response = Map();
		bot = Map();
		bot.put("name","pythonanywhere bot");
		bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
		response.put("bot",bot);
		card = Map();
		card.put("title","You're not connected ");
		card.put("icon","https://cdn2.iconfinder.com/data/icons/universal-31/320/connector_cord_disconnect_electric-256.png");
		card.put("theme","poll");
		response.put("card",card);
		response.put("text","use \"Connection\" menu to connect");
		return response;
		//zoho.cliq.postToChat(chat.get("id"),"You're not connected ");
	}
	return Map();
}
else if(sub_action.containsIgnoreCase("System image"))
{
	query_map = Map();
	query_map.put("criteria","cliquser==" + user.get("id"));
	db = zoho.cliq.getRecords("userkey",query_map);
	if(db.get("status") == "SUCCESS" && db.get("list").size() != 0)
	{
		list = db.get("list");
		for each  i in list
		{
			username = i.get("username");
			privatekey = i.get("privatekey");
			apikey = i.get("apikey");
			apikey = zoho.encryption.aesDecode(privatekey,apikey);
			dc = i.get("dc");
		}
		host = "www.pythonanywhere.com";
		if(dc == "eu")
		{
			host = "eu.pythonanywhere.com";
		}
		api_url = "https://" + host + "/api/v0/user/" + username + "/system_image/";
		headers = Map();
		headers.put("Authorization","Token " + apikey);
		headers.put("Content-Type","application/json");
		responseapi = getUrl(api_url,headers);
		info responseapi;
		r = responseapi.toList();
		if(r.size() != 0)
		{
			for each  i in r
			{
				//table_data = {"text":username,"slides":{{"type":"table","title":"System image","data":{"headers":{"Parameter","Value"},"rows":{{"Parameter":"System image","Value":i.get("system_image")},{"Parameter":"Available system images","Value":i.get("available_system_images")}}}}}};
				//zoho.cliq.postToChat(chat.get("id"),table_data);
				response = Map();
				response.put("text","pythonanywhere");
				bot = Map();
				bot.put("name","pythonanywhere bot");
				bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
				response.put("bot",bot);
				slidesList = list();
				slidesList0 = Map();
				slidesList0.put("type","label");
				slidesList0.put("title","System image");
				dataList = list();
				dataList0 = Map();
				dataList0.put("System image",i.get("system_image"));
				dataList.add(dataList0);
				dataList1 = Map();
				dataList1.put("Available system images",i.get("available_system_images"));
				dataList.add(dataList1);
				slidesList0.put("data",dataList);
				slidesList.add(slidesList0);
				response.put("slides",slidesList);
				return response;
			}
		}
		else
		{
			response = Map();
			bot = Map();
			bot.put("name","pythonanywhere bot");
			bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
			response.put("bot",bot);
			card = Map();
			card.put("theme","poll");
			response.put("card",card);
			response.put("text","Unable to fetch info from pythonanywhere");
			return response;
			//info "Unable to fetch info from PythonAnywhere.";
		}
	}
	else
	{
		response = Map();
		bot = Map();
		bot.put("name","pythonanywhere bot");
		bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
		response.put("bot",bot);
		card = Map();
		card.put("title","You're not connected ");
		card.put("icon","https://cdn2.iconfinder.com/data/icons/universal-31/320/connector_cord_disconnect_electric-256.png");
		card.put("theme","poll");
		response.put("card",card);
		response.put("text","use \"Connection\" menu to connect");
		return response;
		//zoho.cliq.postToChat(chat.get("id"),"You're not connected ");
	}
	return Map();
}
else if(sub_action.containsIgnoreCase("Domain"))
{
	inputs = list();
	query_map = Map();
	query_map.put("criteria","cliquser==" + user.get("id"));
	db = zoho.cliq.getRecords("userkey",query_map);
	if(db.get("status") == "SUCCESS" && db.get("list").size() != 0)
	{
		list = db.get("list");
		for each  i in list
		{
			username = i.get("username");
			privatekey = i.get("privatekey");
			apikey = i.get("apikey");
			apikey = zoho.encryption.aesDecode(privatekey,apikey);
			dc = i.get("dc");
		}
		host = "www.pythonanywhere.com";
		if(dc == "eu")
		{
			host = "eu.pythonanywhere.com";
		}
		api_url = "https://" + host + "/api/v0/user/" + username + "/webapps/";
		headers = Map();
		headers.put("Authorization","Token " + apikey);
		headers.put("Content-Type","application/json");
		responseapi = getUrl(api_url,headers);
		info responseapi;
		r = responseapi.toList();
		if(r.size() != 0)
		{
			inputs = list();
			options = List();
			//r = ["demoappk.com","demoapp.pythonanywhere.com"];
			for each  i in r
			{
				value = "";
				d = i.get("domain_name");
				col = d;
				for each  c in col.toCollection("")
				{
					info c;
					if(c == ".")
					{
						value = value + "_";
					}
					else
					{
						value = value + c;
					}
				}
				option = Map();
				option.put("value",value);
				option.put("label",d);
				options.add(option);
			}
			inputs.add({"name":"domain","label":"Domain","placeholder":"Choose  domain","multiple":false,"mandatory":true,"type":"dynamic_select","options":options});
			form = {"type":"form","title":"Domain Info","name":"wordform","actions":{"submit":{"type":"invoke.function","name":"domain"}},"inputs":inputs};
			return form;
		}
		else
		{
			response = Map();
			bot = Map();
			bot.put("name","pythonanywhere bot");
			bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
			response.put("bot",bot);
			card = Map();
			card.put("title","You don't have any Webapp");
			card.put("theme","prompt");
			response.put("card",card);
			buttonsList = list();
			buttonsList0 = Map();
			buttonsList0.put("label","Create webapp");
			buttonsList0.put("type","-");
			action = Map();
			action.put("type","open.url");
			data = Map();
			data.put("web","https://" + host + "/user/" + username + "/webapps/#tab_id_new_webapp_tab");
			action.put("data",data);
			buttonsList0.put("action",action);
			buttonsList.add(buttonsList0);
			response.put("buttons",buttonsList);
			response.put("text","Click below link to redirect to Create webapp page.");
			return response;
			//zoho.cliq.postToChat(chat.get("id"),"You don't have any Webapp");
		}
	}
	else
	{
		response = Map();
		bot = Map();
		bot.put("name","pythonanywhere bot");
		bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
		response.put("bot",bot);
		card = Map();
		card.put("title","You're not connected ");
		card.put("icon","https://cdn2.iconfinder.com/data/icons/universal-31/320/connector_cord_disconnect_electric-256.png");
		card.put("theme","poll");
		response.put("card",card);
		response.put("text","use \"Connection\" menu to connect");
		return response;
		//zoho.cliq.postToChat(chat.get("id"),"You're not connected ");
	}
}
else if(sub_action.containsIgnoreCase("students"))
{
	query_map = Map();
	query_map.put("criteria","cliquser==" + user.get("id"));
	db = zoho.cliq.getRecords("userkey",query_map);
	if(db.get("status") == "SUCCESS" && db.get("list").size() != 0)
	{
		list = db.get("list");
		for each  i in list
		{
			username = i.get("username");
			privatekey = i.get("privatekey");
			apikey = i.get("apikey");
			apikey = zoho.encryption.aesDecode(privatekey,apikey);
			dc = i.get("dc");
		}
		host = "www.pythonanywhere.com";
		if(dc == "eu")
		{
			host = "eu.pythonanywhere.com";
		}
		api_url = "https://" + host + "/api/v0/user/" + username + "/students/";
		headers = Map();
		headers.put("Authorization","Token " + apikey);
		headers.put("Content-Type","application/json");
		responseapi = getUrl(api_url,headers);
		info responseapi;
		r = responseapi.toList();
		if(r.size() != 0)
		{
			for each  i in r
			{
				//table_data = {"text":"pythonanywhere","slides":{{"type":"table","title":"python versions","data":{"headers":{"students"},"rows":{{"students":i.get("students")}}}}}};
				//zoho.cliq.postToChat(chat.get("id"),table_data);
				response = Map();
				response.put("text","pythonanywhere");
				bot = Map();
				bot.put("name","pythonanywhere bot");
				bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
				response.put("bot",bot);
				slidesList = list();
				slidesList0 = Map();
				slidesList0.put("type","label");
				slidesList0.put("title",username);
				dataList = list();
				dataList0 = Map();
				dataList0.put("Students",i.get("students"));
				dataList.add(dataList0);
				slidesList0.put("data",dataList);
				slidesList.add(slidesList0);
				response.put("slides",slidesList);
				return response;
			}
		}
		else
		{
			response = Map();
			bot = Map();
			bot.put("name","pythonanywhere bot");
			bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
			response.put("bot",bot);
			card = Map();
			card.put("theme","poll");
			response.put("card",card);
			response.put("text","Unable to fetch info from pythonanywhere");
			return response;
			//info "Unable to fetch info from PythonAnywhere.";
		}
	}
	else
	{
		response = Map();
		bot = Map();
		bot.put("name","pythonanywhere bot");
		bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
		response.put("bot",bot);
		card = Map();
		card.put("title","You're not connected ");
		card.put("icon","https://cdn2.iconfinder.com/data/icons/universal-31/320/connector_cord_disconnect_electric-256.png");
		card.put("theme","poll");
		response.put("card",card);
		response.put("text","use \"Connection\" menu to connect");
		return response;
		//zoho.cliq.postToChat(chat.get("id"),"You're not connected ");
	}
}
else if(sub_action.containsIgnoreCase("python version"))
{
	query_map = Map();
	query_map.put("criteria","cliquser==" + user.get("id"));
	db = zoho.cliq.getRecords("userkey",query_map);
	if(db.get("status") == "SUCCESS" && db.get("list").size() != 0)
	{
		list = db.get("list");
		for each  i in list
		{
			username = i.get("username");
			privatekey = i.get("privatekey");
			apikey = i.get("apikey");
			apikey = zoho.encryption.aesDecode(privatekey,apikey);
			dc = i.get("dc");
		}
		host = "www.pythonanywhere.com";
		if(dc == "eu")
		{
			host = "eu.pythonanywhere.com";
		}
		api_url = "https://" + host + "/api/v0/user/" + username + "/default_python_version/";
		headers = Map();
		headers.put("Authorization","Token " + apikey);
		headers.put("Content-Type","application/json");
		responseapi = getUrl(api_url,headers);
		r = responseapi.toList();
		if(r.size() != 0)
		{
			for each  i in r
			{
				//table_data = {"text":"pythonanywhere","slides":{{"type":"table","title":"python versions","data":{"headers":{"Default python version","Available python versions"},"rows":{{"Default python version":i.get("default_python_version"),"Available python versions":i.get("available_python_versions")}}}}}};
				//zoho.cliq.postToChat(chat.get("id"),table_data);
				response = Map();
				response.put("text","pythonanywhere");
				bot = Map();
				bot.put("name","pythonanywhere bot");
				bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
				response.put("bot",bot);
				slidesList = list();
				slidesList0 = Map();
				slidesList0.put("type","label");
				slidesList0.put("title","python versions");
				dataList = list();
				dataList0 = Map();
				dataList0.put("Default python version",i.get("default_python_version"));
				dataList.add(dataList0);
				dataList1 = Map();
				dataList1.put("Available python versions",i.get("available_python_versions"));
				dataList.add(dataList1);
				slidesList0.put("data",dataList);
				slidesList.add(slidesList0);
				response.put("slides",slidesList);
				return response;
			}
		}
		else
		{
			response = Map();
			bot = Map();
			bot.put("name","pythonanywhere bot");
			bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
			response.put("bot",bot);
			card = Map();
			card.put("theme","poll");
			response.put("card",card);
			response.put("text","Unable to fetch info from pythonanywhere");
			return response;
			//info "Unable to fetch info from PythonAnywhere.";
		}
	}
	else
	{
		response = Map();
		bot = Map();
		bot.put("name","pythonanywhere bot");
		bot.put("image","https://www.bing.com/images/blob?bcid=RBiTH4qcI2EGL-9P5U5m6hXymsCX.....7E");
		response.put("bot",bot);
		card = Map();
		card.put("title","You're not connected ");
		card.put("icon","https://cdn2.iconfinder.com/data/icons/universal-31/320/connector_cord_disconnect_electric-256.png");
		card.put("theme","poll");
		response.put("card",card);
		response.put("text","use \"Connection\" menu to connect");
		return response;
		//zoho.cliq.postToChat(chat.get("id"),"You're not connected ");
	}
	return Map();
}
return Map();
